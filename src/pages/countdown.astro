---
import Layout from "../layouts/Layout.astro";

// src/components/Countdown.astro
const { targetDate } = Astro.props;

// Calculate the time difference
const targetTime = new Date(targetDate).getTime();
const now = new Date().getTime();
const timeDifference = targetTime - now;

// Convert time difference to days, hours, minutes, and seconds
const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));
const hours = Math.floor(
  (timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)
);
const minutes = Math.floor((timeDifference % (1000 * 60 * 60)) / (1000 * 60));
const seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);
---

<Layout title="Countdown to Bundestagswahl 2025 - PoliSync">
  <div class="countdown-container">
    <h2 class="countdown-title">Time Until Election Day</h2>
    <div class="countdown-timer">
      <div class="countdown-item">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          width="48"
          height="48"
        >
          <path
            fill="currentColor"
            d="M12 2C6.486 2 2 6.486 2 12s4.486 10 10 10 10-4.486 10-10S17.514 2 12 2zm0 18c-4.411 0-8-3.589-8-8s3.589-8 8-8 8 3.589 8 8-3.589 8-8 8zm1-8h4v2h-6V7h2v5z"
          ></path>
        </svg>
        <span id="days">{days}</span>
        <span>Days</span>
      </div>
      <div class="countdown-item">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          width="48"
          height="48"
        >
          <path
            fill="currentColor"
            d="M12 2C6.486 2 2 6.486 2 12s4.486 10 10 10 10-4.486 10-10S17.514 2 12 2zm0 18c-4.411 0-8-3.589-8-8s3.589-8 8-8 3.589 8 8 8-3.589 8-8 8zm1-8h4v2h-6V7h2v5z"
          ></path>
        </svg>
        <span id="hours">{hours}</span>
        <span>Hours</span>
      </div>
      <div class="countdown-item">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          width="48"
          height="48"
        >
          <path
            fill="currentColor"
            d="M12 2C6.486 2 2 6.486 2 12s4.486 10 10 10 10-4.486 10-10S17.514 2 12 2zm0 18c-4.411 0-8-3.589-8-8s3.589 8 8-8 3.589 8 8 8-3.589 8-8 8zm1-8h4v2h-6V7h2v5z"
          ></path>
        </svg>
        <span id="minutes">{minutes}</span>
        <span>Minutes</span>
      </div>
      <div class="countdown-item">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          width="48"
          height="48"
        >
          <path
            fill="currentColor"
            d="M12 2C6.486 2 2 6.486 2 12s4.486 10 10 10 10-4.486 10-10S17.514 2 12 2zm0 18c-4.411 0-8-3.589-8-8s3.589 8 8-8 3.589 8 8 8-3.589 8-8 8zm1-8h4v2h-6V7h2v5z"
          ></path>
        </svg>
        <span id="seconds">{seconds}</span>
        <span>Seconds</span>
      </div>
    </div>

    <!-- New Voting Resources Section -->
    <div class="voting-resources">
      <h3>Get Ready to Vote</h3>
      <div class="resources-list">
        <div class="resource-card">
          <h4>üìû Need Assistance?</h4>
          <p>
            Have questions or need more information? Visit the official election
            website for details.
          </p>
          <a
            href="https://www.bundeswahlleiterin.de/en/bundestagswahlen/2025.html"
            class="resource-button"
            target="_blank">Learn More</a
          >
        </div>

        <div class="resource-card">
          <h4>üìã Registration & Checklist</h4>
          <p>Ensure you have the required documents before election day.</p>
          <a href="#" class="resource-button">Check List</a>
        </div>
        <div class="resource-card">
          <h4>üìç Find Your Polling Place</h4>
          <p>Locate your designated polling station quickly and easily.</p>
          <a href="#" class="resource-button">Find Polling Place</a>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  const targetDate = new Date("2025-02-23T08:00:01").getTime();

  function updateCountdown() {
    const now = new Date().getTime();
    const timeDifference = targetDate - now;

    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));
    const hours = Math.floor(
      (timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)
    );
    const minutes = Math.floor(
      (timeDifference % (1000 * 60 * 60)) / (1000 * 60)
    );
    const seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);

    const daysElement = document.getElementById("days");
    const hoursElement = document.getElementById("hours");
    const minutesElement = document.getElementById("minutes");
    const secondsElement = document.getElementById("seconds");

    if (daysElement) daysElement.innerText = days.toString();
    if (hoursElement) hoursElement.innerText = hours.toString();
    if (minutesElement) minutesElement.innerText = minutes.toString();
    if (secondsElement) secondsElement.innerText = seconds.toString();
  }

  setInterval(updateCountdown, 1000);
  updateCountdown(); // Initial call
</script>

<style>
  .countdown-container {
    text-align: center;
    background-color: var(--theme-color);
    color: var(--text-color);
    padding: 2rem;
    border-radius: 16px;
    box-shadow: 0 8px 24px var(--shadow-color);
  }

  .countdown-title {
    font-size: 2.5rem;
    margin-bottom: 1.5rem;
    font-weight: bold;
  }

  .countdown-timer {
    display: flex;
    justify-content: center;
    gap: 2rem;
    font-size: 1.5rem;
  }

  .countdown-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
  }

  .countdown-item svg {
    fill: var(--text-color);
  }

  .countdown-item span:first-of-type {
    font-size: 2.5rem;
    font-weight: bold;
  }

  .countdown-item span:last-of-type {
    font-size: 1rem;
    text-transform: uppercase;
    opacity: 0.8;
  }

  @media (max-width: 768px) {
    .countdown-timer {
      flex-direction: column;
      gap: 1rem;
    }

    .countdown-item span:first-of-type {
      font-size: 2rem;
    }
  }

  .voting-resources {
    margin-top: 2rem;
    text-align: center;
  }

  .voting-resources h3 {
    font-size: 1.8rem;
    margin-bottom: 1rem;
  }

  .resources-list {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    align-items: center;
  }

  .resource-card {
    background: white;
    color: #0f4c81;
    padding: 1.5rem;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    text-align: center;
    width: 80%;
    max-width: 400px;
  }

  .resource-card h4 {
    margin: 0 0 0.5rem;
  }

  .resource-card p {
    font-size: 1rem;
    margin-bottom: 1rem; 
    color: var(--text-color);
  }

  .resource-button {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    background-color: #0f4c81;
    color: white;
    text-decoration: none;
    border-radius: 8px;
    font-weight: bold;
    transition: background 0.3s ease;
  }

  .resource-button:hover {
    background-color: #083358;
  }

  @media (max-width: 768px) {
    .resources-list {
      flex-direction: column;
    }

    .resource-card {
      width: 90%;
    }
  }
</style>
